<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="peersim-aggregation">
    
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
	
    <path id="classpath">
        <pathelement location="bin"/>
		<pathelement location="lib/commons-io-2.4/commons-io-2.4.jar"/>
		<pathelement location="lib/commons-math3-3.2/commons-math3-3.2.jar"/>
    	<pathelement location="lib/peersim-1.0.5/peersim-1.0.5.jar"/>
    	<pathelement location="lib/peersim-1.0.5/djep-1.0.0.jar"/>
        <pathelement location="lib/peersim-1.0.5/jep-2.3.0.jar"/>
    </path>

	<!-- === clean targets === -->
	
    <target name="clean" description="Delete build artifacts and documentation.">
        <delete dir="bin"/>
    	<delete dir="doc"/>
    </target>
	
	<target name="clean-plot" description="Delete plot data and images.">
		<delete dir="plot"/>
	</target>
			
    <target name="clean-all" depends="clean,clean-plot" description="Delete build artifacts, documentation and plots."/>
	
	<!-- === build targets === -->
	
    <target name="build" description="Compile the Java classes.">
		<mkdir dir="bin"/>
        <javac classpathref="classpath" debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
        </javac>
    </target>
	
	<target name="docs" depends="build" description="Create the Javadoc.">
		<javadoc classpathref="classpath" packagenames="*" sourcepath="src" destdir="doc">
			<link href="http://docs.oracle.com/javase/6/docs/api/"/>
			<link href="http://commons.apache.org/proper/commons-io/javadocs/api-2.4/"/>
			<link href="http://commons.apache.org/proper/commons-math/javadocs/api-3.2/"/>
			<link href="http://peersim.sourceforge.net/doc/"/>
		</javadoc>
	</target>
	
	<!-- === example run targets === -->
    
    <target name="run-pp-cd" depends="build" description="Run a simulation of the cycle-driven Push-Pull algorithm.">
        <java classname="peersim.Simulator" classpathref="classpath" failonerror="true" fork="yes">
        	<arg value="config/pp-cd.config"/>
        </java>
    </target>

    <target name="run-pp-ed" depends="build" description="Run a simulation of the event-driven Push-Pull algorithm.">
        <java classname="peersim.Simulator" classpathref="classpath" failonerror="true" fork="yes">
        	<arg value="config/pp-ed.config"/>
        </java>
    </target>
        	
    <target name="run-ps-cd" depends="build" description="Run a simulation of the cycle-driven Push-Sum algorithm.">
        <java classname="peersim.Simulator" classpathref="classpath" failonerror="true" fork="yes">
        	<arg value="config/ps-cd.config"/>
        </java>
    </target>
	
    <target name="run-ps-ed" depends="build" description="Run a simulation of the event-driven Push-Sum algorithm.">
        <java classname="peersim.Simulator" classpathref="classpath" failonerror="true" fork="yes">
        	<arg value="config/ps-ed.config"/>
        </java>
    </target>
	
	<!-- === plot targets === -->

	<property name="ext" value="png" description="Plot image type: png or svg."/>
	
    <target name="-sim" depends="build">
        <java classname="peersim.rangesim.RangeSimulator" classpathref="classpath" failonerror="true" fork="yes">
        	<arg value="config/${algo}.config"/>
        	<arg value="range.N N;${noderange}"/>
        	<arg value="range.CLUSTERS CLUSTERS;${clusterrange}"/>
        	<!--<arg value="random.seed ${randomSeed}"/>-->
        	<arg value="include.init ${wire} ${dist} ${init}"/>        	
        	<arg value="control.obs.plotfile ${prefix}-${algo}.data"/>
        </java>
    </target>
		
	<target name="-plot">
		<antcall target="-sim">
			<param name="algo" value="pp-cd"/>
			<param name="init" value=""/>
		</antcall>
		<antcall target="-sim">
			<param name="algo" value="ps-cd"/>
			<param name="init" value="weights"/>
		</antcall>
		<antcall target="-sim">
			<param name="algo" value="pp-ed"/>
			<param name="init" value="weights"/>
		</antcall>
		<antcall target="-sim">
			<param name="algo" value="ps-ed"/>
			<param name="init" value="weights"/>
		</antcall>
		<exec executable="gnuplot" osfamily="unix">
			<arg line="-e &quot;IMG='${img}';TERM='${ext}';DATA_PP_CD='${prefix}-pp-cd.data';DATA_PS_CD='${prefix}-ps-cd.data';DATA_PP_ED='${prefix}-pp-ed.data';DATA_PS_ED='${prefix}-ps-ed.data';TITLE='${title}';XLABEL='${xlabel}';XCOL=${xcolumn};STEPSIZE=1000&quot; plot.p"/>
		</exec>
		<exec executable="gnuplot" osfamily="mac">
			<arg line="-e &quot;IMG='${img}';TERM='${ext}';DATA_PP_CD='${prefix}-pp-cd.data';DATA_PS_CD='${prefix}-ps-cd.data';DATA_PP_ED='${prefix}-pp-ed.data';DATA_PS_ED='${prefix}-ps-ed.data';TITLE='${title}';XLABEL='${xlabel}';XCOL=${xcolumn};STEPSIZE=1000&quot; plot.p"/>
		</exec>
		<exec executable="gnuplot.exe" osfamily="windows">
			<arg line="-e &quot;IMG='${img}';TERM='${ext}';DATA_PP_CD='${prefix}-pp-cd.data';DATA_PS_CD='${prefix}-ps-cd.data';DATA_PP_ED='${prefix}-pp-ed.data';DATA_PS_ED='${prefix}-ps-ed.data';TITLE='${title}';XLABEL='${xlabel}';XCOL=${xcolumn};STEPSIZE=1000&quot; plot.p"/>
		</exec>
	</target>
	
	<target name="plot-fc" description="Simulate and plot: Fully connected.">
		<antcall target="-plot">
			<param name="prefix" value="plot/sim-fc"/>
			<param name="img" value="plot/sim-fc.${ext}"/>
			<param name="title" value="Fully Connected"/>
			<param name="xlabel" value="nodes"/>
			<param name="xcolumn" value="2"/>
		    <param name="noderange" value="8:256|*2" />
			<param name="clusterrange" value="1" />
			<param name="wire" value="wire_fc"/>
			<param name="dist" value="dist_lin"/>
			<!--<param name="randomSeed" value="123" />-->
		</antcall>
	</target>
	
	<target name="plot-kout" description="Simulate and plot: k-Out.">
		<antcall target="-plot">
			<param name="prefix" value="plot/sim-kout"/>
			<param name="img" value="plot/sim-kout.${ext}"/>
			<param name="title" value="k-Out"/>
			<param name="xlabel" value="nodes"/>
			<param name="xcolumn" value="2"/>
		    <param name="noderange" value="8:256|*2" />
			<param name="clusterrange" value="1" />
			<param name="wire" value="wire_kout"/>
			<param name="dist" value="dist_lin"/>
			<!--<param name="randomSeed" value="123" />-->
		</antcall>
	</target>
	
	<target name="plot-cl-n" description="Simulate and plot: Clusters (over node range).">
		<antcall target="-plot">
			<param name="prefix" value="plot/sim-cl-n"/>
			<param name="img" value="plot/sim-cl-n.${ext}"/>
			<param name="title" value="4 Clusters; x Nodes"/>
			<param name="xlabel" value="nodes"/>
			<param name="xcolumn" value="2"/>
		    <param name="noderange" value="8:256|*2" />
			<param name="clusterrange" value="4" />
			<param name="wire" value="wire_cl"/>
			<param name="dist" value="dist_lin"/>
			<!--<param name="randomSeed" value="123" />-->
		</antcall>
	</target>
	
	<target name="plot-cl-c" description="Simulate and plot: Clusters (over cluster range).">
		<antcall target="-plot">
			<param name="prefix" value="plot/sim-cl-c"/>
			<param name="img" value="plot/sim-cl-c.${ext}"/>
			<param name="title" value="x Clusters; 64 Nodes"/>
			<param name="xlabel" value="clusters"/>
			<param name="xcolumn" value="15"/>
			<param name="noderange" value="64" />
		    <param name="clusterrange" value="2,4,8,16" />
			<param name="wire" value="wire_cl"/>
			<param name="dist" value="dist_lin"/>
			<!--<param name="randomSeed" value="123" />-->
		</antcall>
	</target>
	
	<target name="all-plots" depends="clean-plot,plot-fc,plot-kout,plot-cl-n,plot-cl-c" description="Simulate and plot all parameter sets."/>

	<target name="all-plots-open" depends="all-plots" description="Simulate and plot all parameter sets; open an image of all plots combined.">
		<exec executable="montage" osfamily="unix">
			<arg line="-geometry +0+0 -border 1 ./plot/sim-*.${ext} ./plot/all-sim.png"/>
		</exec>
		<exec executable="xdg-open" osfamily="unix">
			<arg line="./plot/all-sim.png"/>
		</exec>
	</target>
	
	<!-- === graphviz targets === -->
	
    <target name="-sim-graph" depends="build">
		<mkdir dir="plot"/>
        <java classname="peersim.Simulator" classpathref="classpath" failonerror="true" fork="yes">
        	<arg value="config/graph.config"/>
        	<arg value="N=${nodes}"/>
        	<arg value="K=${kout}"/>
        	<arg value="CLUSTERS=${clusters}"/>
        	<arg value="include.init ${wire} graph"/>
        	<arg value="init.graph.filename ${data}"/>
        </java>
    </target>
	
	<target name="-plot-graph" depends="-sim-graph">
		<exec executable="dot" osfamily="unix">
			<arg value="-Kcirco"/>
			<arg value="-T${ext}"/>
			<arg value="-o${img}"/>
			<arg value="${data}"/>
		</exec>
	</target>

	<target name="graph-fc" description="Generate an image of a fully connected graph.">
		<antcall target="-plot-graph">
			<param name="img" value="plot/graph-fc.${ext}"/>
			<param name="data" value="plot/graph-fc.dot"/>
			<param name="wire" value="wire_fc"/>
			<param name="nodes" value="8"/>
			<param name="kout" value="0"/>
			<param name="clusters" value="1"/>
		</antcall>
	</target>
	
	<target name="graph-kout" description="Generate an image of a k-out graph.">
		<antcall target="-plot-graph">
			<param name="img" value="plot/graph-kout.${ext}"/>
			<param name="data" value="plot/graph-kout.dot"/>
			<param name="wire" value="wire_kout"/>
			<param name="nodes" value="16"/>
			<param name="kout" value="4"/>
			<param name="clusters" value="1"/>
		</antcall>
	</target>
		
	<target name="graph-cl" description="Generate an image of a clusters graph.">
		<antcall target="-plot-graph">
			<param name="img" value="plot/graph-cl.${ext}"/>
			<param name="data" value="plot/graph-cl.dot"/>
			<param name="wire" value="wire_cl"/>
			<param name="nodes" value="18"/>
			<param name="kout" value="0"/>
			<param name="clusters" value="3"/>
		</antcall>
	</target>
	
	<target name="all-graph" depends="graph-fc,graph-kout,graph-cl" description="Generate all graph images."/>
	
	<target name="all-graph-open" depends="all-graph" description="Generate all graph images; open an image of all graphs combined.">
		<exec executable="montage" osfamily="unix">
			<arg line="-geometry +0+0 -border 1 ./plot/graph-*.${ext} ./plot/all-graph.png"/>
		</exec>
		<exec executable="xdg-open" osfamily="unix">
			<arg line="./plot/all-graph.png"/>
		</exec>
	</target>
	
</project>
